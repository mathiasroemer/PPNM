Part A:

Integral of Sqrt(x) from 0 to 1: 0.6670 +- 0.0005 which is approximately 2/3 (16 evaluations)

Integral of 1/Sqrt(x) from 0 to 1: 2.0000 +- 0.0004 which is approximately 2 (8572 evaluations)

Integral of 4*sqrt(1-x^2) from 0 to 1: 3.1418 +- 0.0012 which is approximately pi (28 evaluations)

Integral of Ln(x)/Sqrt(x) from 0 to 1: -3.9999 +- 0.0008 which is approximately -4 (8604 evaluations)


Part B:

We now try the Clenshaw-Curtis variable transformation and compare the number of evaluations of the integrand with the scipy quad function in python:
Integral of 1/Sqrt(x) from 0 to 1: 2.0000 +- 0.0012 which is approximately 2 (16 evaluations - 231 using scipy)

Integral of Ln(x)/Sqrt(x) from 0 to 1: -3.9999 +- 0.0011 which is approximately -4 (96 evaluations - 315 using scipy)

We see that the number of evaluations is reduced drastically while remaining almost as accurate as before.


Part C:

For the error part, the integration errors has been distributed out into Part A and Part B

Now for the infinite limit integrals:

We first test the case where both limits a infinity on the gaussian integral:
Integral of Exp(-x^2) from -Inf to +Inf: 1.7727 +- 0.0007 which is approximately Sqrt(PI) = 1.7725 which is the expected result (72 evaluations)
Using scipy integration we get a result of 1.7725 with 270 evaluations.

We now test the case where only the upper limit is infinity on the exponential decay integral:
Integral of Exp(-x) from 0 to +Inf: 1.0005 +- 0.0010 which is approximately 1 which is the expected result (20 evaluations)
Using scipy integration we get a result of 1 with 135 evaluations.

At last we test the case where only the lower limit is infinity on the exponential decay integral with finite upper bound:
Integral of Exp(x) from -Inf to 0: 1.0005 +- 0.0010 which is approximately 1 which is again the expected result (20 evaluations)
Using scipy integration we get a result of 1 with 135 evaluations.

